{
    "docs": [
        {
            "location": "/",
            "text": "M3DB Operator\n\n\nIntroduction\n\n\nWelcome to the documentation for the M3DB operator, a \nKubernetes operator\n for running the open-source\ntimeseries database \nM3DB\n on Kubernetes.\n\n\nPlease note that this is \nalpha software\n, and as such its APIs and behavior are subject to breaking changes. While we\naim to produce thoroughly tested reliable software there may be undiscovered bugs.\n\n\nFor more background on the M3DB operator, see our \nKubeCon keynote\n on its origins and usage at Uber.\n\n\nPhilosophy\n\n\nThe M3DB operator aims to automate everyday tasks around managing M3DB. Specifically, it aims to automate:\n\n\n\n\nCreating M3DB clusters\n\n\nDestroying M3DB clusters\n\n\nExpanding clusters (adding instances)\n\n\nShrinking clusters (removing instances)\n\n\nReplacing failed instances\n\n\n\n\nIt explicitly does not try to automate every single edge case a user may ever run into. For example, it does not aim to\nautomate disaster recovery if an entire cluster is taken down. Such use cases may still require human intervention, but\nthe operator will aim to not conflict with such operations a human may have to take on a cluster.\n\n\nGenerally speaking, the operator's philosophy is if \nit would be unclear to a human what action to take, we will not\ntry to guess.",
            "title": "Introduction"
        },
        {
            "location": "/#m3db-operator",
            "text": "",
            "title": "M3DB Operator"
        },
        {
            "location": "/#introduction",
            "text": "Welcome to the documentation for the M3DB operator, a  Kubernetes operator  for running the open-source\ntimeseries database  M3DB  on Kubernetes.  Please note that this is  alpha software , and as such its APIs and behavior are subject to breaking changes. While we\naim to produce thoroughly tested reliable software there may be undiscovered bugs.  For more background on the M3DB operator, see our  KubeCon keynote  on its origins and usage at Uber.",
            "title": "Introduction"
        },
        {
            "location": "/#philosophy",
            "text": "The M3DB operator aims to automate everyday tasks around managing M3DB. Specifically, it aims to automate:   Creating M3DB clusters  Destroying M3DB clusters  Expanding clusters (adding instances)  Shrinking clusters (removing instances)  Replacing failed instances   It explicitly does not try to automate every single edge case a user may ever run into. For example, it does not aim to\nautomate disaster recovery if an entire cluster is taken down. Such use cases may still require human intervention, but\nthe operator will aim to not conflict with such operations a human may have to take on a cluster.  Generally speaking, the operator's philosophy is if  it would be unclear to a human what action to take, we will not\ntry to guess.",
            "title": "Philosophy"
        },
        {
            "location": "/api/",
            "text": "API Docs\n\n\nThis document enumerates the Custom Resource Definitions used by the M3DB Operator. It auto-generated from code comments.\n\n\nTable of Contents\n\n\n\n\nClusterCondition\n\n\nClusterSpec\n\n\nIsolationGroup\n\n\nM3DBCluster\n\n\nM3DBClusterList\n\n\nM3DBStatus\n\n\nIndexOptions\n\n\nNamespace\n\n\nNamespaceOptions\n\n\nRetentionOptions\n\n\nPodIdentity\n\n\nPodIdentityConfig\n\n\n\n\nClusterCondition\n\n\nClusterCondition represents various conditions the cluster can be in.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nType of cluster condition.\n\n\nClusterConditionType\n\n\nfalse\n\n\n\n\n\n\nstatus\n\n\nStatus of the condition (True, False, Unknown).\n\n\ncorev1.ConditionStatus\n\n\nfalse\n\n\n\n\n\n\nlastUpdateTime\n\n\nLast time this condition was updated.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\nlastTransitionTime\n\n\nLast time this condition transitioned from one status to another.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\nreason\n\n\nReason this condition last changed.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\nmessage\n\n\nHuman-friendly message about this condition.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nClusterSpec\n\n\nClusterSpec defines the desired state for a M3 cluster to be converge to.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nimage\n\n\nImage specifies which docker image to use with the cluster\n\n\nstring\n\n\ntrue\n\n\n\n\n\n\nreplicationFactor\n\n\nReplicationFactor defines how many replicas\n\n\nint32\n\n\ntrue\n\n\n\n\n\n\nnumberOfShards\n\n\nNumberOfShards defines how many shards in total\n\n\nint32\n\n\ntrue\n\n\n\n\n\n\nisolationGroups\n\n\nIsolationGroups specifies a map of key-value pairs. Defines which isolation groups to deploy persistent volumes for data nodes\n\n\n[]\nIsolationGroup\n\n\ntrue\n\n\n\n\n\n\nnamespaces\n\n\nNamespaces specifies the namespaces this cluster will hold.\n\n\n[]\nNamespace\n\n\ntrue\n\n\n\n\n\n\npodIdentityConfig\n\n\nPodIdentityConfig sets the configuration for pod identity. If unset only pod name and UID will be used.\n\n\n*PodIdentityConfig\n\n\nfalse\n\n\n\n\n\n\nservices\n\n\nServices allows the user to specify their own services that the operator will create. If non-empty, only the dbnode headless service will be created and users must specify other services they wish to create.\n\n\n[]*corev1.Service\n\n\nfalse\n\n\n\n\n\n\ncontainerResources\n\n\nResources defines memory / cpu constraints for each container in the cluster.\n\n\ncorev1.ResourceRequirements\n\n\nfalse\n\n\n\n\n\n\nvolumeClaimTemplates\n\n\nVolumeClaimTemplates are created with predefined volumeClaimTemplates. They claim PersistentVolumes for cluster storage, volumes are dynamically provisioned by when the StorageClass is defined.\n\n\n[]\ncorev1.PersistentVolumeClaim\n\n\ntrue\n\n\n\n\n\n\nlabels\n\n\nLabels sets the base labels that will be applied to resources created by the cluster. // TODO(schallert): design doc on labeling scheme.\n\n\nmap[string]string\n\n\ntrue\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nIsolationGroup\n\n\nIsolationGroup defines the name of zone as well attributes for the zone configuration\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\nName\n\n\nstring\n\n\ntrue\n\n\n\n\n\n\nnumInstances\n\n\nNumInstances defines the number of instances\n\n\nint32\n\n\ntrue\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nM3DBCluster\n\n\nM3DBCluster defines the cluster\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nmetadata\n\n\n\n\nmetav1.ObjectMeta\n\n\nfalse\n\n\n\n\n\n\ntype\n\n\n\n\nstring\n\n\ntrue\n\n\n\n\n\n\nspec\n\n\n\n\nClusterSpec\n\n\ntrue\n\n\n\n\n\n\nstatus\n\n\n\n\nM3DBStatus\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nM3DBClusterList\n\n\nM3DBClusterList represents a list of M3DB Clusters\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nmetadata\n\n\n\n\nmetav1.ListMeta\n\n\nfalse\n\n\n\n\n\n\nitems\n\n\n\n\n[]\nM3DBCluster\n\n\ntrue\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nM3DBStatus\n\n\nM3DBStatus contains the current state the M3DB cluster along with a human readable message\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nstate\n\n\nState is a enum of green, yellow, and red denoting the health of the cluster\n\n\nM3DBState\n\n\nfalse\n\n\n\n\n\n\nconditions\n\n\nVarious conditions about the cluster.\n\n\n[]\nClusterCondition\n\n\nfalse\n\n\n\n\n\n\nmessage\n\n\nMessage is a human readable message indicating why the cluster is in it's current state\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\nobservedGeneration\n\n\nObservedGeneration is the last generation of the cluster the controller observed. Kubernetes will automatically increment metadata.Generation every time the cluster spec is changed.\n\n\nint64\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nIndexOptions\n\n\nIndexOptions defines parameters for indexing.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nenabled\n\n\nEnabled controls whether metric indexing is enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nblockSize\n\n\nBlockSize controls the index block size.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nNamespace\n\n\nNamespace defines an M3DB namespace or points to a preset M3DB namespace.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\nName is the namespace name.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\npreset\n\n\nPreset indicates preset namespace options.\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\noptions\n\n\nOptions points to optional custom namespace configuration.\n\n\n*\nNamespaceOptions\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nNamespaceOptions\n\n\nNamespaceOptions defines parameters for an M3DB namespace. See https://m3db.github.io/m3/operational_guide/namespace_configuration/ for more details.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbootstrapEnabled\n\n\nBootstrapEnabled control if bootstrapping is enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nflushEnabled\n\n\nFlushEnabled controls whether flushing is enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nwritesToCommitLog\n\n\nWritesToCommitLog controls whether commit log writes are enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\ncleanupEnabled\n\n\nCleanupEnabled controls whether cleanups are enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nrepairEnabled\n\n\nRepairEnabled controls whether repairs are enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nsnapshotEnabled\n\n\nSnapshotEnabled controls whether snapshotting is enabled.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nretentionOptions\n\n\nRetentionOptions sets the retention parameters.\n\n\nRetentionOptions\n\n\nfalse\n\n\n\n\n\n\nindexOptions\n\n\nIndexOptions sets the indexing parameters.\n\n\nIndexOptions\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nRetentionOptions\n\n\nRetentionOptions defines parameters for data retention.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nretentionPeriod\n\n\nRetentionPeriod controls how long data for the namespace is retained.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\nblockSize\n\n\nBlockSize controls the block size for the namespace.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\nbufferFuture\n\n\nBufferFuture controls how far in the future metrics can be written.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\nbufferPast\n\n\nBufferPast controls how far in the past metrics can be written.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\nblockDataExpiry\n\n\nBlockDataExpiry controls the block expiry.\n\n\nbool\n\n\nfalse\n\n\n\n\n\n\nblockDataExpiryAfterNotAccessPeriod\n\n\nBlockDataExpiry controls the not after access period for expiration.\n\n\ntime.Duration\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nPodIdentity\n\n\nPodIdentity contains all the fields that may be used to identify a pod's identity in the M3DB placement. Any non-empty fields will be used to identity uniqueness of a pod for the purpose of M3DB replace operations.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nname\n\n\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\nuid\n\n\n\n\nstring\n\n\nfalse\n\n\n\n\n\n\n\n\nBack to TOC\n\n\nPodIdentityConfig\n\n\nPodIdentityConfig contains cluster-level configuration for deriving pod identity.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\nScheme\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nsources\n\n\n\n\n[]PodIdentitySource\n\n\ntrue\n\n\n\n\n\n\n\n\nBack to TOC",
            "title": "API"
        },
        {
            "location": "/api/#api-docs",
            "text": "This document enumerates the Custom Resource Definitions used by the M3DB Operator. It auto-generated from code comments.",
            "title": "API Docs"
        },
        {
            "location": "/api/#table-of-contents",
            "text": "ClusterCondition  ClusterSpec  IsolationGroup  M3DBCluster  M3DBClusterList  M3DBStatus  IndexOptions  Namespace  NamespaceOptions  RetentionOptions  PodIdentity  PodIdentityConfig",
            "title": "Table of Contents"
        },
        {
            "location": "/api/#clustercondition",
            "text": "ClusterCondition represents various conditions the cluster can be in.     Field  Description  Scheme  Required      type  Type of cluster condition.  ClusterConditionType  false    status  Status of the condition (True, False, Unknown).  corev1.ConditionStatus  false    lastUpdateTime  Last time this condition was updated.  string  false    lastTransitionTime  Last time this condition transitioned from one status to another.  string  false    reason  Reason this condition last changed.  string  false    message  Human-friendly message about this condition.  string  false     Back to TOC",
            "title": "ClusterCondition"
        },
        {
            "location": "/api/#clusterspec",
            "text": "ClusterSpec defines the desired state for a M3 cluster to be converge to.     Field  Description  Scheme  Required      image  Image specifies which docker image to use with the cluster  string  true    replicationFactor  ReplicationFactor defines how many replicas  int32  true    numberOfShards  NumberOfShards defines how many shards in total  int32  true    isolationGroups  IsolationGroups specifies a map of key-value pairs. Defines which isolation groups to deploy persistent volumes for data nodes  [] IsolationGroup  true    namespaces  Namespaces specifies the namespaces this cluster will hold.  [] Namespace  true    podIdentityConfig  PodIdentityConfig sets the configuration for pod identity. If unset only pod name and UID will be used.  *PodIdentityConfig  false    services  Services allows the user to specify their own services that the operator will create. If non-empty, only the dbnode headless service will be created and users must specify other services they wish to create.  []*corev1.Service  false    containerResources  Resources defines memory / cpu constraints for each container in the cluster.  corev1.ResourceRequirements  false    volumeClaimTemplates  VolumeClaimTemplates are created with predefined volumeClaimTemplates. They claim PersistentVolumes for cluster storage, volumes are dynamically provisioned by when the StorageClass is defined.  [] corev1.PersistentVolumeClaim  true    labels  Labels sets the base labels that will be applied to resources created by the cluster. // TODO(schallert): design doc on labeling scheme.  map[string]string  true     Back to TOC",
            "title": "ClusterSpec"
        },
        {
            "location": "/api/#isolationgroup",
            "text": "IsolationGroup defines the name of zone as well attributes for the zone configuration     Field  Description  Scheme  Required      name  Name  string  true    numInstances  NumInstances defines the number of instances  int32  true     Back to TOC",
            "title": "IsolationGroup"
        },
        {
            "location": "/api/#m3dbcluster",
            "text": "M3DBCluster defines the cluster     Field  Description  Scheme  Required      metadata   metav1.ObjectMeta  false    type   string  true    spec   ClusterSpec  true    status   M3DBStatus  false     Back to TOC",
            "title": "M3DBCluster"
        },
        {
            "location": "/api/#m3dbclusterlist",
            "text": "M3DBClusterList represents a list of M3DB Clusters     Field  Description  Scheme  Required      metadata   metav1.ListMeta  false    items   [] M3DBCluster  true     Back to TOC",
            "title": "M3DBClusterList"
        },
        {
            "location": "/api/#m3dbstatus",
            "text": "M3DBStatus contains the current state the M3DB cluster along with a human readable message     Field  Description  Scheme  Required      state  State is a enum of green, yellow, and red denoting the health of the cluster  M3DBState  false    conditions  Various conditions about the cluster.  [] ClusterCondition  false    message  Message is a human readable message indicating why the cluster is in it's current state  string  false    observedGeneration  ObservedGeneration is the last generation of the cluster the controller observed. Kubernetes will automatically increment metadata.Generation every time the cluster spec is changed.  int64  false     Back to TOC",
            "title": "M3DBStatus"
        },
        {
            "location": "/api/#indexoptions",
            "text": "IndexOptions defines parameters for indexing.     Field  Description  Scheme  Required      enabled  Enabled controls whether metric indexing is enabled.  bool  false    blockSize  BlockSize controls the index block size.  time.Duration  false     Back to TOC",
            "title": "IndexOptions"
        },
        {
            "location": "/api/#namespace",
            "text": "Namespace defines an M3DB namespace or points to a preset M3DB namespace.     Field  Description  Scheme  Required      name  Name is the namespace name.  string  false    preset  Preset indicates preset namespace options.  string  false    options  Options points to optional custom namespace configuration.  * NamespaceOptions  false     Back to TOC",
            "title": "Namespace"
        },
        {
            "location": "/api/#namespaceoptions",
            "text": "NamespaceOptions defines parameters for an M3DB namespace. See https://m3db.github.io/m3/operational_guide/namespace_configuration/ for more details.     Field  Description  Scheme  Required      bootstrapEnabled  BootstrapEnabled control if bootstrapping is enabled.  bool  false    flushEnabled  FlushEnabled controls whether flushing is enabled.  bool  false    writesToCommitLog  WritesToCommitLog controls whether commit log writes are enabled.  bool  false    cleanupEnabled  CleanupEnabled controls whether cleanups are enabled.  bool  false    repairEnabled  RepairEnabled controls whether repairs are enabled.  bool  false    snapshotEnabled  SnapshotEnabled controls whether snapshotting is enabled.  bool  false    retentionOptions  RetentionOptions sets the retention parameters.  RetentionOptions  false    indexOptions  IndexOptions sets the indexing parameters.  IndexOptions  false     Back to TOC",
            "title": "NamespaceOptions"
        },
        {
            "location": "/api/#retentionoptions",
            "text": "RetentionOptions defines parameters for data retention.     Field  Description  Scheme  Required      retentionPeriod  RetentionPeriod controls how long data for the namespace is retained.  time.Duration  false    blockSize  BlockSize controls the block size for the namespace.  time.Duration  false    bufferFuture  BufferFuture controls how far in the future metrics can be written.  time.Duration  false    bufferPast  BufferPast controls how far in the past metrics can be written.  time.Duration  false    blockDataExpiry  BlockDataExpiry controls the block expiry.  bool  false    blockDataExpiryAfterNotAccessPeriod  BlockDataExpiry controls the not after access period for expiration.  time.Duration  false     Back to TOC",
            "title": "RetentionOptions"
        },
        {
            "location": "/api/#podidentity",
            "text": "PodIdentity contains all the fields that may be used to identify a pod's identity in the M3DB placement. Any non-empty fields will be used to identity uniqueness of a pod for the purpose of M3DB replace operations.     Field  Description  Scheme  Required      name   string  false    uid   string  false     Back to TOC",
            "title": "PodIdentity"
        },
        {
            "location": "/api/#podidentityconfig",
            "text": "PodIdentityConfig contains cluster-level configuration for deriving pod identity.     Field  Description  Scheme  Required      sources   []PodIdentitySource  true     Back to TOC",
            "title": "PodIdentityConfig"
        },
        {
            "location": "/getting_started/installation/",
            "text": "Installation\n\n\nHelm\n\n\n\n\nAdd the \nm3db-operator\n repo:\n\n\n\n\nhelm repo add m3db https://s3.amazonaws.com/m3-helm-charts-repository/stable\n\n\n\n\n\n\nInstall the \nm3db-operator\n chart:\n\n\n\n\nhelm install m3db/m3db-operator --namespace m3db-operator\n\n\n\n\nNote\n: If uninstalling an instance of the operator that was installed with Helm, some resources such as the\nClusterRole, ClusterRoleBinding, and ServiceAccount may need to be deleted manually.\n\n\nManually\n\n\nInstall the bundled operator manifests in the current namespace:\n\n\nkubectl apply -f https://raw.githubusercontent.com/m3db/m3db-operator/master/bundle.yaml",
            "title": "Installation"
        },
        {
            "location": "/getting_started/installation/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/getting_started/installation/#helm",
            "text": "Add the  m3db-operator  repo:   helm repo add m3db https://s3.amazonaws.com/m3-helm-charts-repository/stable   Install the  m3db-operator  chart:   helm install m3db/m3db-operator --namespace m3db-operator  Note : If uninstalling an instance of the operator that was installed with Helm, some resources such as the\nClusterRole, ClusterRoleBinding, and ServiceAccount may need to be deleted manually.",
            "title": "Helm"
        },
        {
            "location": "/getting_started/installation/#manually",
            "text": "Install the bundled operator manifests in the current namespace:  kubectl apply -f https://raw.githubusercontent.com/m3db/m3db-operator/master/bundle.yaml",
            "title": "Manually"
        }
    ]
}